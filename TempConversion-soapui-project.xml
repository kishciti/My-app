<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="694206db-5d59-4752-9095-ab8280697f3a" activeEnvironment="Default" name="TempConversion" resourceRoot="" soapui-version="5.3.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="06fd730c-6d5d-456f-ba51-0f590410672a" wsaVersion="NONE" name="TempConvertSoap12" type="wsdl" bindingName="{https://www.w3schools.com/xml/}TempConvertSoap12" soapVersion="1_2" anonymous="optional" definition="https://www.w3schools.com/xml/tempconvert.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint></con:endpoints><con:operation id="df2df1d4-489d-4b51-8e03-53220e4d3c91" isOneWay="false" action="https://www.w3schools.com/xml/CelsiusToFahrenheit" name="CelsiusToFahrenheit" bindingOperationName="CelsiusToFahrenheit" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95cca1fd-7fc4-4994-9ffd-dfb757e7c60b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:x/="https://www.w3schools.com/xml/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <x/:CelsiusToFahrenheit>\r
         <!--Optional:-->\r
         <x/:Celsius>?</x/:Celsius>\r
      </x/:CelsiusToFahrenheit>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://www.w3schools.com/xml/TempConvertSoap/CelsiusToFahrenheitRequest"/></con:call></con:operation><con:operation id="dc7080f3-25bb-4ca4-becd-b6afad3478b5" isOneWay="false" action="https://www.w3schools.com/xml/FahrenheitToCelsius" name="FahrenheitToCelsius" bindingOperationName="FahrenheitToCelsius" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90a9e0a0-2b35-4f27-bd8b-6ad9d0c5d6da" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:x/="https://www.w3schools.com/xml/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <x/:FahrenheitToCelsius>\r
         <!--Optional:-->\r
         <x/:Fahrenheit>?</x/:Fahrenheit>\r
      </x/:FahrenheitToCelsius>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://www.w3schools.com/xml/TempConvertSoap/FahrenheitToCelsiusRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="745cafaa-d68d-4c90-8d41-9df4cdea307e" wsaVersion="NONE" name="TempConvertSoap" type="wsdl" bindingName="{https://www.w3schools.com/xml/}TempConvertSoap" soapVersion="1_1" anonymous="optional" definition="https://www.w3schools.com/xml/tempconvert.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.w3schools.com/xml/tempconvert.asmx?WSDL"><con:part><con:url>https://www.w3schools.com/xml/tempconvert.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://www.w3schools.com/xml/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="https://www.w3schools.com/xml/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="https://www.w3schools.com/xml/">
      <s:element name="FahrenheitToCelsius">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Fahrenheit" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FahrenheitToCelsiusResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FahrenheitToCelsiusResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CelsiusToFahrenheit">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Celsius" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CelsiusToFahrenheitResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CelsiusToFahrenheitResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="FahrenheitToCelsiusSoapIn">
    <wsdl:part name="parameters" element="tns:FahrenheitToCelsius"/>
  </wsdl:message>
  <wsdl:message name="FahrenheitToCelsiusSoapOut">
    <wsdl:part name="parameters" element="tns:FahrenheitToCelsiusResponse"/>
  </wsdl:message>
  <wsdl:message name="CelsiusToFahrenheitSoapIn">
    <wsdl:part name="parameters" element="tns:CelsiusToFahrenheit"/>
  </wsdl:message>
  <wsdl:message name="CelsiusToFahrenheitSoapOut">
    <wsdl:part name="parameters" element="tns:CelsiusToFahrenheitResponse"/>
  </wsdl:message>
  <wsdl:message name="FahrenheitToCelsiusHttpPostIn">
    <wsdl:part name="Fahrenheit" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="FahrenheitToCelsiusHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="CelsiusToFahrenheitHttpPostIn">
    <wsdl:part name="Celsius" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="CelsiusToFahrenheitHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:portType name="TempConvertSoap">
    <wsdl:operation name="FahrenheitToCelsius">
      <wsdl:input message="tns:FahrenheitToCelsiusSoapIn"/>
      <wsdl:output message="tns:FahrenheitToCelsiusSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="CelsiusToFahrenheit">
      <wsdl:input message="tns:CelsiusToFahrenheitSoapIn"/>
      <wsdl:output message="tns:CelsiusToFahrenheitSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="TempConvertHttpPost">
    <wsdl:operation name="FahrenheitToCelsius">
      <wsdl:input message="tns:FahrenheitToCelsiusHttpPostIn"/>
      <wsdl:output message="tns:FahrenheitToCelsiusHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="CelsiusToFahrenheit">
      <wsdl:input message="tns:CelsiusToFahrenheitHttpPostIn"/>
      <wsdl:output message="tns:CelsiusToFahrenheitHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TempConvertSoap" type="tns:TempConvertSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="FahrenheitToCelsius">
      <soap:operation soapAction="https://www.w3schools.com/xml/FahrenheitToCelsius" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CelsiusToFahrenheit">
      <soap:operation soapAction="https://www.w3schools.com/xml/CelsiusToFahrenheit" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TempConvertSoap12" type="tns:TempConvertSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="FahrenheitToCelsius">
      <soap12:operation soapAction="https://www.w3schools.com/xml/FahrenheitToCelsius" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CelsiusToFahrenheit">
      <soap12:operation soapAction="https://www.w3schools.com/xml/CelsiusToFahrenheit" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TempConvertHttpPost" type="tns:TempConvertHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="FahrenheitToCelsius">
      <http:operation location="/FahrenheitToCelsius"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CelsiusToFahrenheit">
      <http:operation location="/CelsiusToFahrenheit"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TempConvert">
    <wsdl:port name="TempConvertSoap" binding="tns:TempConvertSoap">
      <soap:address location="http://www.w3schools.com/xml/tempconvert.asmx"/>
    </wsdl:port>
    <wsdl:port name="TempConvertSoap12" binding="tns:TempConvertSoap12">
      <soap12:address location="http://www.w3schools.com/xml/tempconvert.asmx"/>
    </wsdl:port>
    <wsdl:port name="TempConvertHttpPost" binding="tns:TempConvertHttpPost">
      <http:address location="http://www.w3schools.com/xml/tempconvert.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint></con:endpoints><con:operation id="93cbac95-4b58-4bc8-af20-95a281686f74" isOneWay="false" action="https://www.w3schools.com/xml/CelsiusToFahrenheit" name="CelsiusToFahrenheit" bindingOperationName="CelsiusToFahrenheit" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="78daa6e6-d32c-43ec-82ad-98cda224f106" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="https://www.w3schools.com/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:CelsiusToFahrenheit>\r
         <!--Optional:-->\r
         <x/:Celsius>2</x/:Celsius>\r
      </x/:CelsiusToFahrenheit>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://www.w3schools.com/xml/CelsiusToFahrenheit"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1af488b9-9cc7-4bc4-8ce5-bc9d86d06437" isOneWay="false" action="https://www.w3schools.com/xml/FahrenheitToCelsius" name="FahrenheitToCelsius" bindingOperationName="FahrenheitToCelsius" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ee32239b-8ced-4496-a260-20e4c6abde9b" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="https://www.w3schools.com/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:FahrenheitToCelsius>\r
         <!--Optional:-->\r
         <x/:Fahrenheit>1</x/:Fahrenheit>\r
      </x/:FahrenheitToCelsius>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://www.w3schools.com/xml/FahrenheitToCelsius"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="f35ad870-8f6a-4f16-a7f3-503723ad8636" name="TS_TempConv"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6667cf5a-377e-4dbf-9cc8-f7ba75b6335a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_TempConv" searchProperties="true"><con:settings/><con:testStep type="groovy" name="data driver" id="a5aeff98-251a-41e1-9b30-5b3c6afcf282"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import jxl.*
import jxl.write.*
 
// DECLARE THE VARIABLES
 
def myTestCase = context.testCase //myTestCase contains the test case
 
def counter,next,previous,size //Variables used to handle the loop and to move inside the file
 
Workbook workbook1 = Workbook.getWorkbook(new File("C:\\Users\\GUDDY\\Desktop\\Groovy\\SOAPUI\\tempconv.xls")) //file containing the data
 
Sheet sheet1 = workbook1.getSheet(0) //save the first sheet in sheet1
 
size= sheet1.getRows().toInteger() //get the number of rows, each row is a data set
 
propTestStep = myTestCase.getTestStepByName("Property - Looper") // get the Property TestStep object
 
propTestStep.setPropertyValue("Total", size.toString())
 
counter = propTestStep.getPropertyValue("Count").toString() //counter variable contains iteration number

counter = counter.toInteger() //
 
next = (counter > size-2? 0: counter+1) //set the next value
 
// OBTAINING THE DATA YOU NEED
 
Cell cf = sheet1.getCell(1,counter) // getCell(column,row) //obtains convFrom
Cell ct = sheet1.getCell(2,counter) // obtains convTo
Cell cu = sheet1.getCell(3,counter) // obtains convTo


workbook1.close() //close the file
 
 
convFrom = cf.getContents()
convTo = ct.getContents()
convUnit = cu.getContents()
 
propTestStep.setPropertyValue("convFrom", convFrom) //the value is saved in the property
propTestStep.setPropertyValue("convTo", convTo) //the value is saved in the property
propTestStep.setPropertyValue("convUnit", convUnit) //the value is saved in the property

propTestStep.setPropertyValue("Count", next.toString()) //increase Count value
 
next++ //increase next value
 
propTestStep.setPropertyValue("Next", next.toString()) //set Next value on the properties step
 
//Decide if the test has to be run again or not
 
if (counter == size-1){
	propTestStep.setPropertyValue("StopLoop", "T")
	log.info "Setting the stoploop property now..."
}
else if (counter==0){
	def runner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testRunner.testCase, null)
	propTestStep.setPropertyValue("StopLoop", "F")
}
else{
	propTestStep.setPropertyValue("StopLoop", "F")
}
 </script></con:config></con:testStep><con:testStep type="properties" name="Property - Looper" id="a69b82dd-a685-4291-bca2-a4bfab5a8f35"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Users/GUDDY/Desktop/Groovy/SOAPUI/tempConv.properties</con:source><con:properties><con:property><con:name>convFrom</con:name><con:value/></con:property><con:property><con:name>convTo</con:name><con:value/></con:property><con:property><con:name>convUnit</con:name><con:value/></con:property><con:property><con:name>convVal</con:name><con:value/></con:property><con:property><con:name>Total</con:name><con:value/></con:property><con:property><con:name>Count</con:name><con:value>0</con:value></con:property><con:property><con:name>Next</con:name><con:value/></con:property><con:property><con:name>StopLoop</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="fTOc" id="63d6089d-d850-4cb6-8dbc-26eaa2755490"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TempConvertSoap</con:interface><con:operation>FahrenheitToCelsius</con:operation><con:request name="fTOc" id="59a8500c-c796-4ddb-afe4-349cf92357cc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.w3schools.com/xml/tempconvert.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:x/="https://www.w3schools.com/xml/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <x/:FahrenheitToCelsius>\r
         <!--Optional:-->\r
         <x/:Fahrenheit>${Property - Looper#convUnit}</x/:Fahrenheit>\r
      </x/:FahrenheitToCelsius>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5ec00a2b-469c-4276-ba5b-4b2b6d06bb0a"/><con:assertion type="Schema Compliance" id="4b0645fa-fc1f-44a2-9aa9-f5774a2231ea"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="b43c486f-3163-4286-86cd-e4b04f3c0ade"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="loop" id="286bb36c-4870-40ea-8ea2-5eed61dd198d"><con:settings/><con:config><script>def myTestCase = context.testCase
 
def runner
 
propTestStep = myTestCase.getTestStepByName("Property - Looper") // get the Property TestStep
 
endLoop = propTestStep.getPropertyValue("StopLoop").toString()
 
if (endLoop.toString() == "T" || endLoop.toString()=="True" || endLoop.toString()=="true")
 
{
 
log.info ("Exit Groovy Data Source Looper")
 
assert true
 
}
 
else
 
{
 
testRunner.gotoStepByName("data driver") //setStartStep
 
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>